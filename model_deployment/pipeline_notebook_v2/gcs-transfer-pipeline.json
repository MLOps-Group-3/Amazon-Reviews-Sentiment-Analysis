{
  "components": {
    "comp-gcs-transfer-component": {
      "executorLabel": "exec-gcs-transfer-component",
      "inputDefinitions": {
        "parameters": {
          "destination_bucket": {
            "parameterType": "STRING"
          },
          "file_path_dest": {
            "parameterType": "STRING"
          },
          "file_path_source": {
            "parameterType": "STRING"
          },
          "source_bucket": {
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "deploymentSpec": {
    "executors": {
      "exec-gcs-transfer-component": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "gcs_transfer_component"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'kfp==2.4.0' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&  python3 -m pip install --quiet --no-warn-script-location 'google-cloud-storage' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef gcs_transfer_component(\n    source_bucket: str, destination_bucket: str, file_path_source: str, file_path_dest: str\n):\n    \"\"\"Component to transfer files between GCS buckets.\"\"\"\n    from google.cloud import storage  # Import inside component to avoid issues\n    import os\n    # Initialize GCS client\n    storage_client = storage.Client()\n\n    # Download the file from the source bucket\n    source_blob = storage_client.bucket(source_bucket).blob(file_path_source)\n    local_file = f\"/tmp/{os.path.basename(file_path_source)}\"\n    source_blob.download_to_filename(local_file)\n    print(f\"Downloaded {file_path_source} from bucket {source_bucket} to {local_file}\")\n\n    # Upload the file to the destination bucket\n    dest_blob = storage_client.bucket(destination_bucket).blob(f\"{file_path_dest}/{os.path.basename(file_path_source)}\")\n    dest_blob.upload_from_filename(local_file)\n    print(f\"Uploaded {file_path_source} to {destination_bucket}/{file_path_dest}\")\n\n"
          ],
          "image": "python:3.9"
        }
      }
    }
  },
  "pipelineInfo": {
    "name": "gcs-transfer-pipeline"
  },
  "root": {
    "dag": {
      "tasks": {
        "gcs-transfer-component": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-gcs-transfer-component"
          },
          "inputs": {
            "parameters": {
              "destination_bucket": {
                "componentInputParameter": "destination_bucket"
              },
              "file_path_dest": {
                "componentInputParameter": "file_path_dest"
              },
              "file_path_source": {
                "componentInputParameter": "file_path_source"
              },
              "source_bucket": {
                "componentInputParameter": "source_bucket"
              }
            }
          },
          "taskInfo": {
            "name": "gcs-transfer-component"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "destination_bucket": {
          "defaultValue": "arsa_model_deployment_uscentral_v2",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "file_path_dest": {
          "defaultValue": "output/models/final_model.pth",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "file_path_source": {
          "defaultValue": "code/predictor/bert-sent-model/final_model.pth",
          "isOptional": true,
          "parameterType": "STRING"
        },
        "source_bucket": {
          "defaultValue": "arsa_model_deployment_uscentral",
          "isOptional": true,
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.4.0"
}